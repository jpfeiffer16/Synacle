{
  "syncomp.dll": {
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Lexer/Grammar.cs": {
      "syncomp.Grammar": {
        "System.Void syncomp.Grammar::.cctor()": {
          "Lines": {
            "44": 0,
            "45": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0,
            "59": 0,
            "60": 0,
            "61": 0,
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0,
            "77": 0,
            "78": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "84": 0,
            "85": 0,
            "86": 0,
            "87": 0,
            "88": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0,
            "94": 0,
            "95": 0,
            "96": 0,
            "97": 0,
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0,
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0,
            "113": 0,
            "114": 0,
            "115": 0,
            "116": 0,
            "117": 0,
            "118": 0,
            "119": 0,
            "120": 0,
            "121": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "126": 0,
            "127": 0,
            "128": 0,
            "129": 0,
            "130": 0,
            "131": 0,
            "132": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0,
            "137": 0,
            "138": 0,
            "139": 0,
            "140": 0,
            "141": 0,
            "142": 0,
            "143": 0,
            "144": 0,
            "145": 0,
            "146": 0,
            "147": 0,
            "148": 0,
            "149": 0,
            "150": 0,
            "151": 0,
            "152": 0,
            "153": 0,
            "154": 0,
            "155": 0,
            "156": 0,
            "157": 0,
            "158": 0,
            "159": 0,
            "160": 0,
            "161": 0,
            "162": 0,
            "163": 0,
            "164": 0,
            "165": 0,
            "166": 0,
            "167": 0,
            "168": 0,
            "169": 0,
            "170": 0,
            "171": 0,
            "172": 0,
            "173": 0,
            "174": 0,
            "175": 0,
            "176": 0,
            "177": 0,
            "178": 0,
            "179": 0,
            "180": 0,
            "181": 0,
            "182": 0,
            "183": 0,
            "184": 0,
            "185": 0,
            "186": 0,
            "187": 0,
            "188": 0,
            "189": 0,
            "190": 0,
            "191": 0,
            "192": 0,
            "193": 0,
            "194": 0,
            "195": 0,
            "196": 0,
            "197": 0,
            "198": 0,
            "199": 0,
            "200": 0,
            "201": 0,
            "202": 0,
            "203": 0,
            "204": 0,
            "205": 0,
            "206": 0,
            "207": 0,
            "208": 0,
            "209": 0,
            "210": 0,
            "211": 0,
            "212": 0
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Lexer/Lexer.cs": {
      "syncomp.Lexer": {
        "System.ValueTuple`2<System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<System.String>> syncomp.Lexer::Lex()": {
          "Lines": {
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "59": 0,
            "60": 0,
            "61": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0,
            "77": 0,
            "78": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "85": 0,
            "86": 0,
            "87": 0,
            "88": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0,
            "94": 0,
            "95": 0,
            "96": 0,
            "97": 0
          },
          "Branches": [
            {
              "Line": 33,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 40,
              "EndOffset": 65,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 369,
              "EndOffset": 80,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 342,
              "EndOffset": 100,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 137,
              "EndOffset": 139,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 46,
              "Offset": 137,
              "EndOffset": 144,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 152,
              "EndOffset": 154,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 47,
              "Offset": 152,
              "EndOffset": 163,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 178,
              "EndOffset": 180,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 50,
              "Offset": 178,
              "EndOffset": 187,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 54,
              "Offset": 199,
              "EndOffset": 201,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 54,
              "Offset": 199,
              "EndOffset": 208,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 63,
              "Offset": 216,
              "EndOffset": 218,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 63,
              "Offset": 221,
              "EndOffset": 223,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 63,
              "Offset": 216,
              "EndOffset": 238,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 63,
              "Offset": 221,
              "EndOffset": 238,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 63,
              "Offset": 243,
              "EndOffset": 245,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 67,
              "Offset": 259,
              "EndOffset": 261,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 67,
              "Offset": 259,
              "EndOffset": 307,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 63,
              "Offset": 243,
              "EndOffset": 308,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 342,
              "EndOffset": 347,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 0
            },
            {
              "Line": 39,
              "Offset": 369,
              "EndOffset": 374,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 0
            },
            {
              "Line": 85,
              "Offset": 387,
              "EndOffset": 389,
              "Path": 0,
              "Ordinal": 22,
              "Hits": 0
            },
            {
              "Line": 85,
              "Offset": 387,
              "EndOffset": 444,
              "Path": 1,
              "Ordinal": 23,
              "Hits": 0
            }
          ]
        },
        "System.Boolean syncomp.Lexer::isNumberChar(System.String)": {
          "Lines": {
            "100": 0,
            "101": 0,
            "102": 0
          },
          "Branches": []
        },
        "System.Boolean syncomp.Lexer::isWordChar(System.String)": {
          "Lines": {
            "105": 0,
            "106": 0,
            "107": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<syncomp.SyntaxToken> syncomp.Lexer::AggregateLikeTokens(System.Collections.Generic.List`1<syncomp.SyntaxToken>)": {
          "Lines": {
            "110": 0,
            "111": 0,
            "113": 0,
            "114": 0,
            "115": 0,
            "117": 0,
            "118": 0,
            "119": 0,
            "120": 0,
            "121": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "126": 0,
            "128": 0,
            "129": 0,
            "130": 0,
            "131": 0,
            "132": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0,
            "137": 0,
            "138": 0,
            "139": 0,
            "140": 0,
            "141": 0,
            "143": 0,
            "144": 0
          },
          "Branches": [
            {
              "Line": 111,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 111,
              "Offset": 12,
              "EndOffset": 37,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 113,
              "Offset": 318,
              "EndOffset": 50,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 117,
              "Offset": 282,
              "EndOffset": 72,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 119,
              "Offset": 88,
              "EndOffset": 90,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 119,
              "Offset": 88,
              "EndOffset": 114,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 119,
              "Offset": 119,
              "EndOffset": 124,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 121,
              "Offset": 155,
              "EndOffset": 157,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 121,
              "Offset": 155,
              "EndOffset": 180,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 128,
              "Offset": 210,
              "EndOffset": 212,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 128,
              "Offset": 210,
              "EndOffset": 274,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 119,
              "Offset": 119,
              "EndOffset": 275,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 117,
              "Offset": 282,
              "EndOffset": 287,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 113,
              "Offset": 318,
              "EndOffset": 323,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            }
          ]
        },
        "System.Void syncomp.Lexer::.ctor(System.String)": {
          "Lines": {
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Lexer/SyntaxToken.cs": {
      "syncomp.SyntaxToken": {
        "System.String syncomp.SyntaxToken::get_Token()": {
          "Lines": {
            "5": 642
          },
          "Branches": []
        },
        "syncomp.SyntaxTokenType syncomp.SyntaxToken::get_Type()": {
          "Lines": {
            "6": 6403
          },
          "Branches": []
        },
        "System.Int32 syncomp.SyntaxToken::get_Index()": {
          "Lines": {
            "7": 0
          },
          "Branches": []
        },
        "System.Int32 syncomp.SyntaxToken::get_Line()": {
          "Lines": {
            "8": 0
          },
          "Branches": []
        },
        "System.String syncomp.SyntaxToken::get_File()": {
          "Lines": {
            "9": 0
          },
          "Branches": []
        },
        "System.Void syncomp.SyntaxToken::.ctor()": {
          "Lines": {
            "10": 1206
          },
          "Branches": []
        },
        "System.Void syncomp.SyntaxToken::.ctor(System.String)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 58,
              "EndOffset": 60,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 58,
              "EndOffset": 64,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/ListExtentions.cs": {
      "syncomp.ListExtentions": {
        "T syncomp.ListExtentions::Pop(System.Collections.Generic.List`1<T>)": {
          "Lines": {
            "8": 64,
            "9": 64,
            "10": 64,
            "11": 64,
            "12": 64,
            "13": 64,
            "14": 64,
            "17": 0,
            "18": 0,
            "21": 64
          },
          "Branches": [
            {
              "Line": 10,
              "Offset": 14,
              "EndOffset": 16,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 64
            },
            {
              "Line": 10,
              "Offset": 14,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.List`1<T> syncomp.ListExtentions::Splice(System.Collections.Generic.List`1<T>,System.Int32,System.Int32,System.Collections.Generic.List`1<T>)": {
          "Lines": {
            "25": 0,
            "26": 0,
            "27": 0,
            "29": 0,
            "30": 0
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/AstNode.cs": {
      "syncomp.AstNode": {
        "System.String syncomp.AstNode::get_Type()": {
          "Lines": {
            "5": 455
          },
          "Branches": []
        },
        "System.Void syncomp.AstNode::.ctor(System.String)": {
          "Lines": {
            "7": 455,
            "8": 455,
            "9": 455,
            "10": 455
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Addition.cs": {
      "syncomp.Addition": {
        "syncomp.AstNode syncomp.Addition::get_Left()": {
          "Lines": {
            "11": 3
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.Addition::get_Right()": {
          "Lines": {
            "12": 3
          },
          "Branches": []
        },
        "System.Void syncomp.Addition::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "5": 6,
            "6": 6,
            "7": 6,
            "8": 6,
            "9": 6
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/AddressOf.cs": {
      "syncomp.AddressOf": {
        "syncomp.AstNode syncomp.AddressOf::get_Parameter()": {
          "Lines": {
            "10": 2
          },
          "Branches": []
        },
        "System.Void syncomp.AddressOf::.ctor(syncomp.AstNode)": {
          "Lines": {
            "5": 4,
            "6": 4,
            "7": 4,
            "8": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/And.cs": {
      "syncomp.And": {
        "syncomp.AstNode syncomp.And::get_Left()": {
          "Lines": {
            "11": 3
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.And::get_Right()": {
          "Lines": {
            "12": 3
          },
          "Branches": []
        },
        "System.Void syncomp.And::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "5": 6,
            "6": 6,
            "7": 6,
            "8": 6,
            "9": 6
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Breakpoint.cs": {
      "syncomp.Breakpoint": {
        "System.Void syncomp.Breakpoint::.ctor()": {
          "Lines": {
            "5": 6
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Decr.cs": {
      "syncomp.Decr": {
        "syncomp.AstNode syncomp.Decr::get_Parameter()": {
          "Lines": {
            "10": 7
          },
          "Branches": []
        },
        "System.Void syncomp.Decr::.ctor(syncomp.AstNode)": {
          "Lines": {
            "5": 6,
            "6": 6,
            "7": 6,
            "8": 6
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Deref.cs": {
      "syncomp.Deref": {
        "syncomp.AstNode syncomp.Deref::get_Parameter()": {
          "Lines": {
            "10": 2
          },
          "Branches": []
        },
        "System.Void syncomp.Deref::.ctor(syncomp.AstNode)": {
          "Lines": {
            "5": 4,
            "6": 4,
            "7": 4,
            "8": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Division.cs": {
      "syncomp.Division": {
        "syncomp.AstNode syncomp.Division::get_Left()": {
          "Lines": {
            "11": 3
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.Division::get_Right()": {
          "Lines": {
            "12": 3
          },
          "Branches": []
        },
        "System.Void syncomp.Division::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "5": 6,
            "6": 6,
            "7": 6,
            "8": 6,
            "9": 6
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Equal.cs": {
      "syncomp.Equal": {
        "syncomp.AstNode syncomp.Equal::get_Left()": {
          "Lines": {
            "11": 3
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.Equal::get_Right()": {
          "Lines": {
            "12": 3
          },
          "Branches": []
        },
        "System.Void syncomp.Equal::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "5": 6,
            "6": 6,
            "7": 6,
            "8": 6,
            "9": 6
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/For.cs": {
      "syncomp.For": {
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.For::get_Init()": {
          "Lines": {
            "20": 5
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.For::get_Condition()": {
          "Lines": {
            "21": 5
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.For::get_Incrementor()": {
          "Lines": {
            "22": 5
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.For::get_Expression()": {
          "Lines": {
            "23": 5
          },
          "Branches": []
        },
        "System.Void syncomp.For::.ctor(System.Collections.Generic.List`1<syncomp.AstNode>,System.Collections.Generic.List`1<syncomp.AstNode>,System.Collections.Generic.List`1<syncomp.AstNode>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "12": 10,
            "13": 10,
            "14": 10,
            "15": 10,
            "16": 10,
            "17": 10,
            "18": 10
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/FunctionCall.cs": {
      "syncomp.FunctionCall": {
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.FunctionCall::get_Parameters()": {
          "Lines": {
            "14": 4
          },
          "Branches": []
        },
        "System.String syncomp.FunctionCall::get_Name()": {
          "Lines": {
            "15": 11
          },
          "Branches": []
        },
        "System.Void syncomp.FunctionCall::.ctor(System.Collections.Generic.List`1<syncomp.AstNode>,System.String)": {
          "Lines": {
            "8": 4,
            "9": 4,
            "10": 4,
            "11": 4,
            "12": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/FunctionDeclaration.cs": {
      "syncomp.FunctionDeclaration": {
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.FunctionDeclaration::get_Parameters()": {
          "Lines": {
            "18": 14
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.FunctionDeclaration::get_Expression()": {
          "Lines": {
            "19": 3
          },
          "Branches": []
        },
        "System.String syncomp.FunctionDeclaration::get_Name()": {
          "Lines": {
            "20": 5
          },
          "Branches": []
        },
        "System.Void syncomp.FunctionDeclaration::.ctor(System.Collections.Generic.List`1<syncomp.AstNode>,System.Collections.Generic.List`1<syncomp.AstNode>,System.String)": {
          "Lines": {
            "11": 15,
            "12": 15,
            "13": 15,
            "14": 15,
            "15": 15,
            "16": 15
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/GreaterThan.cs": {
      "syncomp.GreaterThan": {
        "syncomp.AstNode syncomp.GreaterThan::get_Left()": {
          "Lines": {
            "11": 2
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.GreaterThan::get_Right()": {
          "Lines": {
            "12": 2
          },
          "Branches": []
        },
        "System.Void syncomp.GreaterThan::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "5": 5,
            "6": 5,
            "7": 5,
            "8": 5,
            "9": 5
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/GreaterThanOrEqual.cs": {
      "syncomp.GreaterThanOrEqual": {
        "syncomp.AstNode syncomp.GreaterThanOrEqual::get_Left()": {
          "Lines": {
            "12": 4
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.GreaterThanOrEqual::get_Right()": {
          "Lines": {
            "13": 4
          },
          "Branches": []
        },
        "System.Void syncomp.GreaterThanOrEqual::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "6": 7,
            "7": 7,
            "8": 7,
            "9": 7,
            "10": 7
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Identifier.cs": {
      "syncomp.Identifier": {
        "System.String syncomp.Identifier::get_Name()": {
          "Lines": {
            "5": 130
          },
          "Branches": []
        },
        "System.Void syncomp.Identifier::.ctor(System.String)": {
          "Lines": {
            "6": 103,
            "7": 103,
            "8": 103,
            "9": 103
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/If.cs": {
      "syncomp.If": {
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.If::get_Condition()": {
          "Lines": {
            "13": 3
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.If::get_Expression()": {
          "Lines": {
            "14": 3
          },
          "Branches": []
        },
        "System.Void syncomp.If::.ctor(System.Collections.Generic.List`1<syncomp.AstNode>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "7": 6,
            "8": 6,
            "9": 6,
            "10": 6,
            "11": 6
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Incr.cs": {
      "syncomp.Incr": {
        "syncomp.AstNode syncomp.Incr::get_Parameter()": {
          "Lines": {
            "10": 13
          },
          "Branches": []
        },
        "System.Void syncomp.Incr::.ctor(syncomp.AstNode)": {
          "Lines": {
            "5": 15,
            "6": 15,
            "7": 15,
            "8": 15
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/IntegerLiteral.cs": {
      "syncomp.IntegerLiteral": {
        "System.String syncomp.IntegerLiteral::get_Value()": {
          "Lines": {
            "5": 69
          },
          "Branches": []
        },
        "System.Void syncomp.IntegerLiteral::.ctor(System.String)": {
          "Lines": {
            "6": 141,
            "7": 141,
            "8": 141,
            "9": 141
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/LessThan.cs": {
      "syncomp.LessThan": {
        "syncomp.AstNode syncomp.LessThan::get_Left()": {
          "Lines": {
            "11": 9
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.LessThan::get_Right()": {
          "Lines": {
            "12": 9
          },
          "Branches": []
        },
        "System.Void syncomp.LessThan::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "5": 18,
            "6": 18,
            "7": 18,
            "8": 18,
            "9": 18
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/LessThanOrEqual.cs": {
      "syncomp.LessThanOrEqual": {
        "syncomp.AstNode syncomp.LessThanOrEqual::get_Left()": {
          "Lines": {
            "11": 3
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.LessThanOrEqual::get_Right()": {
          "Lines": {
            "12": 3
          },
          "Branches": []
        },
        "System.Void syncomp.LessThanOrEqual::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "5": 6,
            "6": 6,
            "7": 6,
            "8": 6,
            "9": 6
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Mod.cs": {
      "syncomp.Mod": {
        "syncomp.AstNode syncomp.Mod::get_Left()": {
          "Lines": {
            "11": 2
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.Mod::get_Right()": {
          "Lines": {
            "12": 2
          },
          "Branches": []
        },
        "System.Void syncomp.Mod::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "5": 5,
            "6": 5,
            "7": 5,
            "8": 5,
            "9": 5
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Multiplication.cs": {
      "syncomp.Multiplication": {
        "syncomp.AstNode syncomp.Multiplication::get_Left()": {
          "Lines": {
            "11": 2
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.Multiplication::get_Right()": {
          "Lines": {
            "12": 2
          },
          "Branches": []
        },
        "System.Void syncomp.Multiplication::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "5": 5,
            "6": 5,
            "7": 5,
            "8": 5,
            "9": 5
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Not.cs": {
      "syncomp.Not": {
        "syncomp.AstNode syncomp.Not::get_Parameter()": {
          "Lines": {
            "10": 1
          },
          "Branches": []
        },
        "System.Void syncomp.Not::.ctor(syncomp.AstNode)": {
          "Lines": {
            "5": 3,
            "6": 3,
            "7": 3,
            "8": 3
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Or.cs": {
      "syncomp.Or": {
        "syncomp.AstNode syncomp.Or::get_Left()": {
          "Lines": {
            "11": 2
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.Or::get_Right()": {
          "Lines": {
            "12": 2
          },
          "Branches": []
        },
        "System.Void syncomp.Or::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "5": 5,
            "6": 5,
            "7": 5,
            "8": 5,
            "9": 5
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/ParenGroup.cs": {
      "syncomp.ParenGroup": {
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.ParenGroup::get_Nodes()": {
          "Lines": {
            "12": 2
          },
          "Branches": []
        },
        "System.Void syncomp.ParenGroup::.ctor(System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "7": 4,
            "8": 4,
            "9": 4,
            "10": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Return.cs": {
      "syncomp.Return": {
        "syncomp.AstNode syncomp.Return::get_Parameter()": {
          "Lines": {
            "10": 5
          },
          "Branches": []
        },
        "System.Void syncomp.Return::.ctor(syncomp.AstNode)": {
          "Lines": {
            "5": 5,
            "6": 5,
            "7": 5,
            "8": 5
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/StringLiteral.cs": {
      "syncomp.StringLiteral": {
        "System.String syncomp.StringLiteral::get_Value()": {
          "Lines": {
            "10": 18
          },
          "Branches": []
        },
        "System.Void syncomp.StringLiteral::.ctor(System.String)": {
          "Lines": {
            "5": 8,
            "6": 8,
            "7": 8,
            "8": 8
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/Subtraction.cs": {
      "syncomp.Subtraction": {
        "syncomp.AstNode syncomp.Subtraction::get_Left()": {
          "Lines": {
            "11": 2
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.Subtraction::get_Right()": {
          "Lines": {
            "12": 2
          },
          "Branches": []
        },
        "System.Void syncomp.Subtraction::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "5": 5,
            "6": 5,
            "7": 5,
            "8": 5,
            "9": 5
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/VariableAssignment.cs": {
      "syncomp.VariableAssignment": {
        "syncomp.AstNode syncomp.VariableAssignment::get_Identifier()": {
          "Lines": {
            "5": 3
          },
          "Branches": []
        },
        "syncomp.AstNode syncomp.VariableAssignment::get_Parameter()": {
          "Lines": {
            "6": 2
          },
          "Branches": []
        },
        "System.Void syncomp.VariableAssignment::.ctor(syncomp.AstNode,syncomp.AstNode)": {
          "Lines": {
            "8": 11,
            "9": 11,
            "10": 11,
            "11": 11,
            "12": 11
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/VariableDeclaration.cs": {
      "syncomp.VariableDeclaration": {
        "System.String syncomp.VariableDeclaration::get_Identifier()": {
          "Lines": {
            "5": 14
          },
          "Branches": []
        },
        "System.Void syncomp.VariableDeclaration::.ctor(System.String)": {
          "Lines": {
            "6": 30,
            "7": 30,
            "8": 30,
            "9": 30
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Nodes/While.cs": {
      "syncomp.While": {
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.While::get_Condition()": {
          "Lines": {
            "14": 4
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.While::get_Expression()": {
          "Lines": {
            "15": 4
          },
          "Branches": []
        },
        "System.Void syncomp.While::.ctor(System.Collections.Generic.List`1<syncomp.AstNode>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "8": 4,
            "9": 4,
            "10": 4,
            "11": 4,
            "12": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/ParseException.cs": {
      "syncomp.ParseException": {
        "System.Int32 syncomp.ParseException::get_Index()": {
          "Lines": {
            "8": 2
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<syncomp.SyntaxToken> syncomp.ParseException::get_Tokens()": {
          "Lines": {
            "9": 1
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.ParseException::get_Nodes()": {
          "Lines": {
            "10": 0
          },
          "Branches": []
        },
        "System.Void syncomp.ParseException::.ctor(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "12": 3,
            "13": 3,
            "14": 3,
            "15": 3,
            "16": 3,
            "17": 3
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Parser.cs": {
      "syncomp.Parser": {
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.Parser::Parse()": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 16,
              "Offset": 23,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void syncomp.Parser::.ctor(System.Collections.Generic.List`1<syncomp.SyntaxToken>)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/ParserPath.cs": {
      "syncomp.ParserPath": {
        "syncomp.SyntaxTokenType syncomp.ParserPath::get_Match()": {
          "Lines": {
            "18": 0
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.ParserPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "22": 0,
            "23": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<syncomp.AstNode> syncomp.ParserPath::ParseTokens(System.Collections.Generic.List`1<syncomp.SyntaxToken>)": {
          "Lines": {
            "27": 152,
            "28": 152,
            "30": 682,
            "31": 192,
            "32": 5568,
            "33": 857,
            "34": 142,
            "36": 142,
            "37": 142,
            "38": 139,
            "39": 139,
            "40": 139,
            "41": 3,
            "42": 3,
            "43": 3,
            "44": 0,
            "45": 0,
            "48": 3,
            "49": 3,
            "52": 139,
            "53": 189,
            "55": 149,
            "56": 149
          },
          "Branches": [
            {
              "Line": 30,
              "Offset": 295,
              "EndOffset": 45,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 192
            },
            {
              "Line": 33,
              "Offset": 226,
              "EndOffset": 88,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 142
            },
            {
              "Line": 43,
              "Offset": 188,
              "EndOffset": 190,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 188,
              "EndOffset": 193,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 33,
              "Offset": 226,
              "EndOffset": 231,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 189
            },
            {
              "Line": 30,
              "Offset": 295,
              "EndOffset": 300,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 149
            }
          ]
        },
        "System.Int32 syncomp.ParserPath::GetExpression(syncomp.SyntaxTokenType,syncomp.SyntaxTokenType,System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>)": {
          "Lines": {
            "63": 50,
            "64": 50,
            "67": 200,
            "68": 200,
            "69": 250,
            "70": 250,
            "71": 200,
            "72": 200,
            "73": 200,
            "76": 50,
            "77": 50
          },
          "Branches": [
            {
              "Line": 73,
              "Offset": 61,
              "EndOffset": 3,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 200
            },
            {
              "Line": 69,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 50
            },
            {
              "Line": 69,
              "Offset": 24,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 200
            },
            {
              "Line": 70,
              "Offset": 41,
              "EndOffset": 43,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 50
            },
            {
              "Line": 70,
              "Offset": 41,
              "EndOffset": 47,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 200
            },
            {
              "Line": 73,
              "Offset": 61,
              "EndOffset": 63,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 50
            }
          ]
        },
        "System.Int32 syncomp.ParserPath::GetNextTerminator(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>)": {
          "Lines": {
            "80": 15,
            "81": 15,
            "82": 15,
            "83": 15,
            "84": 15,
            "85": 15,
            "86": 15,
            "87": 15,
            "88": 15,
            "89": 15,
            "90": 15,
            "91": 15,
            "92": 45,
            "93": 45,
            "94": 85,
            "95": 40,
            "96": 40,
            "97": 40,
            "98": 40,
            "99": 40,
            "100": 50,
            "101": 30,
            "102": 30,
            "104": 15,
            "105": 15
          },
          "Branches": [
            {
              "Line": 92,
              "Offset": 155,
              "EndOffset": 51,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 40
            },
            {
              "Line": 95,
              "Offset": 72,
              "EndOffset": 74,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 95,
              "Offset": 72,
              "EndOffset": 78,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 40
            },
            {
              "Line": 96,
              "Offset": 100,
              "EndOffset": 102,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 96,
              "Offset": 100,
              "EndOffset": 106,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 40
            },
            {
              "Line": 97,
              "Offset": 119,
              "EndOffset": 121,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 10
            },
            {
              "Line": 97,
              "Offset": 119,
              "EndOffset": 127,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 30
            },
            {
              "Line": 97,
              "Offset": 132,
              "EndOffset": 136,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 30
            },
            {
              "Line": 97,
              "Offset": 132,
              "EndOffset": 157,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 15
            },
            {
              "Line": 92,
              "Offset": 155,
              "EndOffset": 157,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 15
            }
          ]
        },
        "System.Void syncomp.ParserPath::.cctor()": {
          "Lines": {
            "10": 1,
            "11": 1,
            "12": 69,
            "13": 2,
            "14": 119,
            "15": 118,
            "16": 29,
            "17": 1
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/AdditionPath.cs": {
      "syncomp.AdditionPath": {
        "syncomp.SyntaxTokenType syncomp.AdditionPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.AdditionPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/AddressOfPath.cs": {
      "syncomp.AddressOfPath": {
        "syncomp.SyntaxTokenType syncomp.AddressOfPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.AddressOfPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 3,
            "15": 3,
            "16": 3,
            "17": 3
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/AndPath.cs": {
      "syncomp.AndPath": {
        "syncomp.SyntaxTokenType syncomp.AndPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.AndPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/BreakpointPath.cs": {
      "syncomp.BreakpointPath": {
        "syncomp.SyntaxTokenType syncomp.BreakpointPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.BreakpointPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 2,
            "15": 2,
            "16": 2
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/DecrPath.cs": {
      "syncomp.DecrPath": {
        "syncomp.SyntaxTokenType syncomp.DecrPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.DecrPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 3,
            "15": 3,
            "16": 3,
            "17": 3
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/DerefPath.cs": {
      "syncomp.DerefPath": {
        "syncomp.SyntaxTokenType syncomp.DerefPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.DerefPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 3,
            "15": 3,
            "16": 3,
            "17": 3,
            "18": 3,
            "19": 3,
            "20": 3,
            "21": 3,
            "22": 3
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/DivisionPath.cs": {
      "syncomp.DivisionPath": {
        "syncomp.SyntaxTokenType syncomp.DivisionPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.DivisionPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/EqualPath.cs": {
      "syncomp.EqualPath": {
        "syncomp.SyntaxTokenType syncomp.EqualPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.EqualPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/ForPath.cs": {
      "syncomp.ForPath": {
        "syncomp.SyntaxTokenType syncomp.ForPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.ForPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 6,
            "15": 6,
            "16": 6,
            "17": 6,
            "18": 6,
            "19": 6,
            "20": 6,
            "21": 6,
            "22": 6,
            "23": 6,
            "24": 6,
            "25": 6,
            "26": 150,
            "27": 66,
            "28": 66,
            "29": 66,
            "30": 12,
            "31": 12,
            "32": 12,
            "33": 12,
            "34": 66,
            "35": 6,
            "36": 6,
            "37": 6,
            "38": 6,
            "40": 6,
            "41": 6,
            "42": 6,
            "43": 6,
            "44": 6,
            "45": 6,
            "46": 6,
            "48": 6,
            "49": 6,
            "51": 6,
            "52": 6,
            "53": 6,
            "54": 6,
            "55": 6,
            "56": 6,
            "57": 6
          },
          "Branches": [
            {
              "Line": 26,
              "Offset": 117,
              "EndOffset": 58,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 66
            },
            {
              "Line": 29,
              "Offset": 91,
              "EndOffset": 93,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 12
            },
            {
              "Line": 29,
              "Offset": 91,
              "EndOffset": 109,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 66
            },
            {
              "Line": 26,
              "Offset": 117,
              "EndOffset": 119,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 6
            }
          ]
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/FunctionDeclarationPath.cs": {
      "syncomp.FunctionDeclarationPath": {
        "syncomp.SyntaxTokenType syncomp.FunctionDeclarationPath::get_Match()": {
          "Lines": {
            "10": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.FunctionDeclarationPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "15": 15,
            "16": 15,
            "17": 15,
            "18": 6,
            "19": 6,
            "20": 6,
            "21": 6,
            "22": 15,
            "23": 15,
            "24": 15,
            "25": 15,
            "26": 15,
            "27": 15,
            "28": 15,
            "29": 15,
            "30": 15,
            "31": 15,
            "32": 15,
            "33": 15,
            "34": 15,
            "35": 15,
            "36": 15,
            "37": 15,
            "39": 12,
            "41": 12,
            "42": 12,
            "43": 12,
            "44": 12,
            "45": 12,
            "46": 12,
            "48": 12,
            "49": 12,
            "50": 12,
            "52": 12,
            "56": 12,
            "57": 12
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 17,
              "Offset": 30,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 15
            },
            {
              "Line": 56,
              "Offset": 140,
              "EndOffset": 142,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 6
            },
            {
              "Line": 56,
              "Offset": 140,
              "EndOffset": 145,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 6
            }
          ]
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/GreaterThanOrEqualPath.cs": {
      "syncomp.GreaterThanOrEqualPath": {
        "syncomp.SyntaxTokenType syncomp.GreaterThanOrEqualPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.GreaterThanOrEqualPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4,
            "19": 4,
            "20": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/GreaterThanPath.cs": {
      "syncomp.GreaterThanPath": {
        "syncomp.SyntaxTokenType syncomp.GreaterThanPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.GreaterThanPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4,
            "19": 4,
            "20": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/IdentifierPath.cs": {
      "syncomp.IdentifierPath": {
        "syncomp.SyntaxTokenType syncomp.IdentifierPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.IdentifierPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 106,
            "17": 106,
            "19": 106,
            "20": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "34": 106,
            "35": 106,
            "36": 36,
            "37": 36,
            "38": 36,
            "40": 70,
            "41": 70,
            "42": 70,
            "43": 106,
            "45": 106,
            "46": 106
          },
          "Branches": [
            {
              "Line": 19,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 16
            },
            {
              "Line": 19,
              "Offset": 18,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 90
            },
            {
              "Line": 19,
              "Offset": 44,
              "EndOffset": 46,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 44,
              "EndOffset": 109,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 106
            },
            {
              "Line": 35,
              "Offset": 127,
              "EndOffset": 129,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 36
            },
            {
              "Line": 35,
              "Offset": 127,
              "EndOffset": 145,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 70
            }
          ]
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/IfPath.cs": {
      "syncomp.IfPath": {
        "syncomp.SyntaxTokenType syncomp.IfPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.IfPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4,
            "19": 4,
            "20": 4,
            "21": 4,
            "22": 4,
            "23": 4,
            "24": 4,
            "25": 4,
            "26": 4,
            "27": 4,
            "28": 4,
            "29": 4,
            "30": 4,
            "31": 4,
            "33": 4,
            "34": 4,
            "35": 4,
            "36": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/IncrPath.cs": {
      "syncomp.IncrPath": {
        "syncomp.SyntaxTokenType syncomp.IncrPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.IncrPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 9,
            "15": 9,
            "16": 9,
            "17": 9
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/LeftParenPath.cs": {
      "syncomp.LeftParenPath": {
        "syncomp.SyntaxTokenType syncomp.LeftParenPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.LeftParenPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 3,
            "15": 3,
            "16": 3,
            "17": 3,
            "18": 3,
            "19": 3,
            "20": 3,
            "22": 3,
            "23": 3,
            "24": 3,
            "25": 3,
            "27": 3,
            "29": 3,
            "30": 3
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/LessThanOrEqualPath.cs": {
      "syncomp.LessThanOrEqualPath": {
        "syncomp.SyntaxTokenType syncomp.LessThanOrEqualPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.LessThanOrEqualPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4,
            "19": 4,
            "20": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/LessThanPath.cs": {
      "syncomp.LessThanPath": {
        "syncomp.SyntaxTokenType syncomp.LessThanPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.LessThanPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 10,
            "15": 10,
            "16": 10,
            "17": 10,
            "18": 10,
            "19": 10,
            "20": 10
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/ModPath.cs": {
      "syncomp.ModPath": {
        "syncomp.SyntaxTokenType syncomp.ModPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.ModPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/MultiplicationPath.cs": {
      "syncomp.MultiplicationPath": {
        "syncomp.SyntaxTokenType syncomp.MultiplicationPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.MultiplicationPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/NotPath.cs": {
      "syncomp.NotPath": {
        "syncomp.SyntaxTokenType syncomp.NotPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.NotPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 2,
            "15": 2,
            "16": 2,
            "17": 2,
            "18": 2,
            "19": 2
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/OrPath.cs": {
      "syncomp.OrPath": {
        "syncomp.SyntaxTokenType syncomp.OrPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.OrPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/QuotePath.cs": {
      "syncomp.QuotePath": {
        "syncomp.SyntaxTokenType syncomp.QuotePath::get_Match()": {
          "Lines": {
            "10": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.QuotePath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "15": 2,
            "16": 2,
            "17": 2,
            "18": 4,
            "19": 2,
            "20": 2,
            "21": 2,
            "22": 2,
            "23": 4,
            "24": 2,
            "25": 2
          },
          "Branches": [
            {
              "Line": 18,
              "Offset": 38,
              "EndOffset": 10,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            },
            {
              "Line": 18,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 22,
              "Offset": 62,
              "EndOffset": 64,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 22,
              "Offset": 62,
              "EndOffset": 87,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            }
          ]
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/ReturnPath.cs": {
      "syncomp.ReturnPath": {
        "syncomp.SyntaxTokenType syncomp.ReturnPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.ReturnPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 3,
            "15": 3,
            "17": 3,
            "18": 3,
            "19": 3,
            "20": 3,
            "21": 3,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 3,
            "27": 3
          },
          "Branches": [
            {
              "Line": 17,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            },
            {
              "Line": 17,
              "Offset": 25,
              "EndOffset": 67,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/SubtractionPath.cs": {
      "syncomp.SubtractionPath": {
        "syncomp.SyntaxTokenType syncomp.SubtractionPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.SubtractionPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 4,
            "15": 4,
            "16": 4,
            "17": 4,
            "18": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/VariableAssignmentPath.cs": {
      "syncomp.VariableAssignmentPath": {
        "syncomp.SyntaxTokenType syncomp.VariableAssignmentPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.VariableAssignmentPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 10,
            "15": 10,
            "16": 10,
            "17": 10,
            "18": 10,
            "19": 10,
            "20": 10,
            "21": 10
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/VariableDeclarationPath.cs": {
      "syncomp.VariableDeclarationPath": {
        "syncomp.SyntaxTokenType syncomp.VariableDeclarationPath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.VariableDeclarationPath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 20,
            "15": 20,
            "17": 20,
            "18": 20
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Parser/Paths/WhilePath.cs": {
      "syncomp.WhilePath": {
        "syncomp.SyntaxTokenType syncomp.WhilePath::get_Match()": {
          "Lines": {
            "9": 192
          },
          "Branches": []
        },
        "System.ValueTuple`2<System.Int32,syncomp.AstNode> syncomp.WhilePath::Eval(System.Int32,System.Collections.Generic.List`1<syncomp.SyntaxToken>,System.Collections.Generic.List`1<syncomp.AstNode>)": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Preprocessor/Preprocessor.cs": {
      "syncomp.Preprocessor": {
        "System.String syncomp.Preprocessor::Preprocess()": {
          "Lines": {
            "25": 0,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "38": 0,
            "39": 0
          },
          "Branches": [
            {
              "Line": 28,
              "Offset": 127,
              "EndOffset": 3,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 28,
              "Offset": 127,
              "EndOffset": 129,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "System.String syncomp.Preprocessor::GetCode(System.String)": {
          "Lines": {
            "42": 0,
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0,
            "59": 0,
            "60": 0,
            "61": 0,
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0
          },
          "Branches": [
            {
              "Line": 53,
              "Offset": 25,
              "EndOffset": 27,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 55,
              "Offset": 93,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 72,
              "EndOffset": 74,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 72,
              "EndOffset": 85,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 55,
              "Offset": 93,
              "EndOffset": 95,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 25,
              "EndOffset": 115,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.String syncomp.Preprocessor::get_Code()": {
          "Lines": {
            "78": 0
          },
          "Branches": []
        },
        "System.String syncomp.Preprocessor::get_WorkingDirectory()": {
          "Lines": {
            "79": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.Preprocessor::get_IncludeLocations()": {
          "Lines": {
            "80": 0
          },
          "Branches": []
        },
        "System.Void syncomp.Preprocessor::.ctor(System.String,System.String,System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "9": 0,
            "10": 0,
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0
          },
          "Branches": []
        },
        "System.Void syncomp.Preprocessor::.ctor(System.String,System.String)": {
          "Lines": {
            "21": 0,
            "22": 0
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Program.cs": {
      "syncomp.Program": {
        "System.Void syncomp.Program::Main(System.String[])": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0,
            "16": 0,
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0,
            "28": 0,
            "29": 0,
            "31": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "40": 0,
            "42": 0,
            "43": 0,
            "45": 0,
            "46": 0,
            "47": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "57": 0,
            "58": 0,
            "60": 0,
            "61": 0,
            "63": 0,
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0,
            "70": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 10,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 40,
              "EndOffset": 42,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 40,
              "EndOffset": 57,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 62,
              "EndOffset": 64,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 19,
              "Offset": 62,
              "EndOffset": 79,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 109,
              "EndOffset": 111,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 109,
              "EndOffset": 131,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 153,
              "EndOffset": 155,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 153,
              "EndOffset": 177,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 57,
              "Offset": 241,
              "EndOffset": 243,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 57,
              "Offset": 241,
              "EndOffset": 265,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.List`1<System.String> syncomp.Program::CompileCode(System.String,System.String,System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "76": 0,
            "78": 0,
            "79": 0,
            "81": 0,
            "82": 0,
            "84": 0,
            "85": 0,
            "86": 0,
            "87": 0,
            "88": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0,
            "95": 0,
            "97": 0,
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0,
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "110": 0,
            "111": 0,
            "112": 0
          },
          "Branches": []
        },
        "System.Void syncomp.Program::DisplayParseErrorContext(syncomp.ParseException,System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "116": 0,
            "117": 0,
            "118": 0,
            "119": 0,
            "120": 0,
            "121": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "126": 0,
            "127": 0,
            "128": 0,
            "129": 0,
            "130": 0,
            "131": 0,
            "132": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0,
            "137": 0,
            "138": 0,
            "139": 0,
            "140": 0,
            "141": 0
          },
          "Branches": [
            {
              "Line": 119,
              "Offset": 34,
              "EndOffset": 36,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 119,
              "Offset": 34,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 120,
              "Offset": 69,
              "EndOffset": 71,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 120,
              "Offset": 69,
              "EndOffset": 94,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 128,
              "Offset": 184,
              "EndOffset": 146,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 128,
              "Offset": 184,
              "EndOffset": 186,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 132,
              "Offset": 188,
              "EndOffset": 190,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 132,
              "Offset": 188,
              "EndOffset": 196,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 135,
              "Offset": 242,
              "EndOffset": 244,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 137,
              "Offset": 259,
              "EndOffset": 261,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 137,
              "Offset": 259,
              "EndOffset": 271,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 135,
              "Offset": 242,
              "EndOffset": 323,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            }
          ]
        },
        "System.Void syncomp.Program::PrintUsage()": {
          "Lines": {
            "144": 0,
            "145": 0,
            "146": 0,
            "147": 0,
            "148": 0,
            "149": 0,
            "150": 0,
            "151": 0
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Context.cs": {
      "syncomp.Context": {
        "System.Void syncomp.Context::.ctor()": {
          "Lines": {
            "5": 59,
            "6": 59,
            "7": 59,
            "8": 59,
            "9": 59,
            "10": 59,
            "11": 59
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/AdditionEmitter.cs": {
      "syncomp.AdditionEmitter": {
        "System.Type syncomp.AdditionEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.AdditionEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 2,
            "12": 2,
            "13": 2,
            "14": 2,
            "15": 2,
            "16": 2,
            "17": 2,
            "19": 2,
            "21": 2,
            "22": 2
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/AddressOfEmitter.cs": {
      "syncomp.AddressOfEmitter": {
        "System.Type syncomp.AddressOfEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.AddressOfEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 1,
            "12": 1,
            "13": 1,
            "14": 1,
            "15": 1,
            "17": 1,
            "18": 1
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/AndEmitter.cs": {
      "syncomp.AndEmitter": {
        "System.Type syncomp.AndEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.AndEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 2,
            "12": 2,
            "13": 2,
            "14": 2,
            "15": 2,
            "16": 2,
            "17": 2,
            "18": 2,
            "20": 2,
            "21": 2
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/BreakpointEmitter.cs": {
      "syncomp.BreakpointEmitter": {
        "System.Type syncomp.BreakpointEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.BreakpointEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 0,
            "12": 0,
            "13": 0,
            "14": 0,
            "15": 0
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/DecrEmitter.cs": {
      "syncomp.DecrEmitter": {
        "System.Type syncomp.DecrEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.DecrEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 3,
            "12": 3,
            "13": 3,
            "15": 3,
            "16": 3,
            "17": 3,
            "18": 3,
            "20": 3,
            "21": 3
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/DerefEmitter.cs": {
      "syncomp.DerefEmitter": {
        "System.Type syncomp.DerefEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.DerefEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 1,
            "12": 1,
            "13": 1,
            "14": 1,
            "15": 1,
            "17": 1,
            "18": 1
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/DivisionEmitter.cs": {
      "syncomp.DivisionEmitter": {
        "System.Type syncomp.DivisionEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.DivisionEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 2,
            "12": 2,
            "13": 2,
            "15": 2,
            "16": 2,
            "17": 2,
            "18": 2,
            "20": 2,
            "22": 2,
            "23": 2
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/EqualEmitter.cs": {
      "syncomp.EqualEmitter": {
        "System.Type syncomp.EqualEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.EqualEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 2,
            "12": 2,
            "13": 2,
            "15": 2,
            "16": 2,
            "17": 2,
            "18": 2,
            "19": 2,
            "21": 2,
            "22": 2
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/ForEmitter.cs": {
      "syncomp.ForEmitter": {
        "System.Type syncomp.ForEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.ForEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 4,
            "12": 4,
            "13": 4,
            "14": 4,
            "16": 4,
            "17": 4,
            "18": 4,
            "19": 4,
            "21": 4,
            "22": 4,
            "24": 4,
            "25": 4,
            "27": 4,
            "28": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/FunctionCallEmitter.cs": {
      "syncomp.FunctionCallEmitter": {
        "System.Type syncomp.FunctionCallEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.FunctionCallEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 4,
            "12": 4,
            "13": 4,
            "14": 4,
            "15": 18,
            "16": 3,
            "17": 3,
            "18": 3,
            "19": 3,
            "20": 4,
            "23": 4,
            "24": 3,
            "25": 3,
            "26": 3,
            "27": 1,
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 1,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 1,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 1,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 1,
            "45": 0,
            "46": 0,
            "47": 0,
            "49": 1,
            "50": 1,
            "51": 1,
            "52": 0,
            "53": 0,
            "56": 0,
            "57": 0,
            "59": 0,
            "61": 1,
            "62": 1,
            "63": 1,
            "64": 1,
            "66": 4,
            "67": 4
          },
          "Branches": [
            {
              "Line": 15,
              "Offset": 105,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 15,
              "Offset": 105,
              "EndOffset": 107,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 4
            },
            {
              "Line": 23,
              "Offset": 151,
              "EndOffset": 153,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 3
            },
            {
              "Line": 23,
              "Offset": 151,
              "EndOffset": 172,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 27,
              "Offset": 192,
              "EndOffset": 194,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 27,
              "Offset": 192,
              "EndOffset": 213,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            },
            {
              "Line": 31,
              "Offset": 233,
              "EndOffset": 235,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 31,
              "Offset": 233,
              "EndOffset": 254,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 1
            },
            {
              "Line": 35,
              "Offset": 274,
              "EndOffset": 276,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 274,
              "EndOffset": 319,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 1
            },
            {
              "Line": 40,
              "Offset": 339,
              "EndOffset": 341,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 339,
              "EndOffset": 360,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 1
            },
            {
              "Line": 44,
              "Offset": 380,
              "EndOffset": 382,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 44,
              "Offset": 380,
              "EndOffset": 398,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 1
            },
            {
              "Line": 51,
              "Offset": 427,
              "EndOffset": 429,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 51,
              "Offset": 427,
              "EndOffset": 477,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 1
            }
          ]
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/FunctionDeclarationEmitter.cs": {
      "syncomp.FunctionDeclarationEmitter": {
        "System.Type syncomp.FunctionDeclarationEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.FunctionDeclarationEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 3,
            "12": 3,
            "13": 3,
            "14": 3,
            "15": 3,
            "16": 3,
            "17": 3,
            "18": 3,
            "19": 3,
            "20": 12,
            "21": 3,
            "22": 3,
            "23": 3,
            "24": 3,
            "25": 3,
            "26": 3,
            "27": 3,
            "28": 3,
            "30": 3,
            "31": 3,
            "32": 3,
            "33": 3
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 26,
              "EndOffset": 44,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 15,
              "Offset": 47,
              "EndOffset": 49,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 15,
              "Offset": 47,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 3
            },
            {
              "Line": 20,
              "Offset": 236,
              "EndOffset": 138,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 3
            },
            {
              "Line": 20,
              "Offset": 236,
              "EndOffset": 238,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 3
            }
          ]
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/GreaterThanEmitter.cs": {
      "syncomp.GreaterThanEmitter": {
        "System.Type syncomp.GreaterThanEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.GreaterThanEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 1,
            "12": 1,
            "13": 1,
            "15": 1,
            "16": 1,
            "17": 1,
            "18": 1,
            "19": 1,
            "21": 1,
            "22": 1
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/GreaterThanOrEqualEmitter.cs": {
      "syncomp.GreaterThanOrEqualEmitter": {
        "System.Type syncomp.GreaterThanOrEqualEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.GreaterThanOrEqualEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 3,
            "12": 3,
            "13": 3,
            "15": 3,
            "16": 3,
            "17": 3,
            "18": 3,
            "19": 3,
            "20": 3,
            "21": 3,
            "23": 3,
            "24": 3
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/IdentifierEmitter.cs": {
      "syncomp.IdentifierEmitter": {
        "System.Type syncomp.IdentifierEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.IdentifierEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 15,
            "12": 15,
            "13": 15,
            "15": 15,
            "17": 15,
            "19": 15,
            "20": 15
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/IfEmitter.cs": {
      "syncomp.IfEmitter": {
        "System.Type syncomp.IfEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.IfEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 2,
            "12": 2,
            "13": 2,
            "15": 2,
            "17": 2,
            "18": 2,
            "19": 2,
            "20": 2,
            "22": 2,
            "23": 2
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/IncrEmitter.cs": {
      "syncomp.IncrEmitter": {
        "System.Type syncomp.IncrEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.IncrEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 6,
            "12": 6,
            "13": 6,
            "14": 6,
            "15": 6,
            "16": 6,
            "18": 6,
            "19": 6
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/IntegerLiteralEmitter.cs": {
      "syncomp.IntegerLiteralEmitter": {
        "System.Type syncomp.IntegerLiteralEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.IntegerLiteralEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 69,
            "12": 69,
            "13": 69,
            "15": 69,
            "17": 69,
            "18": 69
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/LessThanEmitter.cs": {
      "syncomp.LessThanEmitter": {
        "System.Type syncomp.LessThanEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.LessThanEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 8,
            "12": 8,
            "13": 8,
            "15": 8,
            "16": 8,
            "17": 8,
            "18": 8,
            "19": 8,
            "20": 8,
            "21": 8,
            "22": 8,
            "24": 8,
            "25": 8
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/LessThanOrEqualEmitter.cs": {
      "syncomp.LessThanOrEqualEmitter": {
        "System.Type syncomp.LessThanOrEqualEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.LessThanOrEqualEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 2,
            "12": 2,
            "13": 2,
            "15": 2,
            "16": 2,
            "17": 2,
            "18": 2,
            "19": 2,
            "21": 2,
            "23": 2,
            "24": 2
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/ModEmitter.cs": {
      "syncomp.ModEmitter": {
        "System.Type syncomp.ModEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.ModEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 1,
            "12": 1,
            "13": 1,
            "15": 1,
            "16": 1,
            "17": 1,
            "18": 1,
            "20": 1,
            "22": 1,
            "23": 1
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/MultiplicationEmitter.cs": {
      "syncomp.MultiplicationEmitter": {
        "System.Type syncomp.MultiplicationEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.MultiplicationEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 1,
            "12": 1,
            "13": 1,
            "15": 1,
            "16": 1,
            "17": 1,
            "18": 1,
            "20": 1,
            "22": 1,
            "23": 1
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/NotEmitter.cs": {
      "syncomp.NotEmitter": {
        "System.Type syncomp.NotEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.NotEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 1,
            "12": 1,
            "13": 1,
            "14": 1,
            "15": 1,
            "17": 1,
            "18": 1
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/OrEmitter.cs": {
      "syncomp.OrEmitter": {
        "System.Type syncomp.OrEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.OrEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 1,
            "12": 1,
            "13": 1,
            "14": 1,
            "15": 1,
            "16": 1,
            "17": 1,
            "18": 1,
            "20": 1,
            "21": 1
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/ParenGroupEmitter.cs": {
      "syncomp.ParenGroupEmitter": {
        "System.Type syncomp.ParenGroupEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.ParenGroupEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 1,
            "12": 1,
            "13": 1,
            "14": 1,
            "16": 1,
            "17": 1
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/ReturnEmitter.cs": {
      "syncomp.ReturnEmitter": {
        "System.Type syncomp.ReturnEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.ReturnEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 2,
            "14": 2,
            "15": 2,
            "16": 2,
            "17": 2,
            "18": 2,
            "19": 2,
            "20": 2,
            "21": 2,
            "22": 2,
            "24": 2,
            "25": 2
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 16,
              "Offset": 30,
              "EndOffset": 70,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 2
            }
          ]
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/StringLiteralEmitter.cs": {
      "syncomp.StringLiteralEmitter": {
        "System.Type syncomp.StringLiteralEmitter::get_Match()": {
          "Lines": {
            "10": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.StringLiteralEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "13": 6,
            "14": 6,
            "15": 6,
            "16": 6,
            "17": 6,
            "18": 6,
            "19": 6,
            "20": 6,
            "21": 6,
            "22": 6,
            "23": 48,
            "24": 18,
            "25": 18,
            "26": 18,
            "27": 0,
            "28": 0,
            "29": 0,
            "32": 0,
            "33": 0,
            "35": 0,
            "36": 0,
            "38": 0,
            "39": 18,
            "40": 18,
            "41": 0,
            "42": 0,
            "43": 0,
            "45": 18,
            "46": 18,
            "47": 18,
            "48": 18,
            "49": 6,
            "50": 6,
            "51": 6,
            "52": 0,
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "58": 6,
            "59": 6,
            "60": 6,
            "61": 6,
            "62": 6,
            "64": 6,
            "65": 6
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 35,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 23,
              "Offset": 331,
              "EndOffset": 127,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 18
            },
            {
              "Line": 26,
              "Offset": 149,
              "EndOffset": 151,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 180,
              "EndOffset": 184,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 180,
              "EndOffset": 192,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 188,
              "EndOffset": 206,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 188,
              "EndOffset": 220,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 26,
              "Offset": 149,
              "EndOffset": 221,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 18
            },
            {
              "Line": 40,
              "Offset": 249,
              "EndOffset": 251,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 249,
              "EndOffset": 288,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 18
            },
            {
              "Line": 23,
              "Offset": 331,
              "EndOffset": 336,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 6
            },
            {
              "Line": 51,
              "Offset": 390,
              "EndOffset": 392,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 51,
              "Offset": 390,
              "EndOffset": 445,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 6
            },
            {
              "Line": 16,
              "Offset": 35,
              "EndOffset": 503,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 6
            }
          ]
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/SubtractionEmitter.cs": {
      "syncomp.SubtractionEmitter": {
        "System.Type syncomp.SubtractionEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.SubtractionEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 1,
            "12": 1,
            "13": 1,
            "15": 1,
            "16": 1,
            "17": 1,
            "18": 1,
            "20": 1,
            "22": 1,
            "23": 1
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/VariableAssignmentEmitter.cs": {
      "syncomp.VariableAssignmentEmitter": {
        "System.Type syncomp.VariableAssignmentEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.VariableAssignmentEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 1,
            "12": 1,
            "13": 1,
            "14": 1,
            "16": 1,
            "17": 1,
            "18": 1,
            "19": 1,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "26": 1,
            "27": 1,
            "29": 1,
            "30": 1
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 49,
              "EndOffset": 51,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 16,
              "Offset": 49,
              "EndOffset": 83,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 113,
              "EndOffset": 115,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 20,
              "Offset": 113,
              "EndOffset": 181,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            }
          ]
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/VariableDeclarationEmitter.cs": {
      "syncomp.VariableDeclarationEmitter": {
        "System.Type syncomp.VariableDeclarationEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.VariableDeclarationEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 10,
            "12": 10,
            "13": 10,
            "14": 10,
            "15": 10,
            "16": 10,
            "17": 10,
            "19": 10,
            "20": 10,
            "21": 10,
            "22": 10,
            "23": 10,
            "25": 10,
            "26": 10
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Emitters/WhileEmitter.cs": {
      "syncomp.WhileEmitter": {
        "System.Type syncomp.WhileEmitter::get_Match()": {
          "Lines": {
            "8": 100
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.WhileEmitter::Transform(T,syncomp.Context)": {
          "Lines": {
            "11": 4,
            "12": 4,
            "13": 4,
            "14": 4,
            "17": 4,
            "19": 4,
            "20": 4,
            "22": 4,
            "24": 4,
            "25": 4,
            "27": 4,
            "28": 4
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Transformer.cs": {
      "syncomp.Transformer": {
        "System.Collections.Generic.List`1<System.String> syncomp.Transformer::TransformFullAst()": {
          "Lines": {
            "28": 0,
            "29": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.Transformer::Transform()": {
          "Lines": {
            "42": 104,
            "43": 104,
            "45": 512,
            "46": 100,
            "47": 100,
            "48": 3100,
            "49": 100,
            "50": 500,
            "51": 100,
            "52": 100,
            "53": 100,
            "54": 100,
            "56": 104,
            "57": 104
          },
          "Branches": [
            {
              "Line": 45,
              "Offset": 152,
              "EndOffset": 22,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 100
            },
            {
              "Line": 50,
              "Offset": 125,
              "EndOffset": 81,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 100
            },
            {
              "Line": 50,
              "Offset": 125,
              "EndOffset": 127,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 100
            },
            {
              "Line": 45,
              "Offset": 152,
              "EndOffset": 157,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 104
            }
          ]
        },
        "System.String syncomp.Transformer::GetUID()": {
          "Lines": {
            "60": 0,
            "61": 0,
            "62": 0
          },
          "Branches": []
        },
        "System.Collections.Generic.List`1<System.String> syncomp.Transformer::EnsureDivisionSupport(syncomp.Context,System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0,
            "77": 0,
            "78": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "84": 0,
            "85": 0,
            "86": 0,
            "87": 0,
            "88": 0,
            "89": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0,
            "94": 0
          },
          "Branches": [
            {
              "Line": 67,
              "Offset": 22,
              "EndOffset": 24,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 52,
              "EndOffset": 54,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 70,
              "Offset": 52,
              "EndOffset": 77,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 67,
              "Offset": 22,
              "EndOffset": 94,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.List`1<System.String> syncomp.Transformer::EnsureSubtractSupport(syncomp.Context,System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "97": 0,
            "98": 0,
            "99": 0,
            "100": 0,
            "101": 0,
            "102": 0,
            "103": 0,
            "104": 0,
            "105": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0,
            "113": 0,
            "114": 0,
            "115": 0
          },
          "Branches": [
            {
              "Line": 98,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 101,
              "Offset": 42,
              "EndOffset": 44,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 101,
              "Offset": 42,
              "EndOffset": 67,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 98,
              "Offset": 12,
              "EndOffset": 84,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.List`1<System.String> syncomp.Transformer::EnsureNotSupport(syncomp.Context,System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "118": 0,
            "119": 0,
            "120": 0,
            "121": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "126": 0,
            "127": 0,
            "128": 0,
            "129": 0,
            "130": 0,
            "131": 0,
            "132": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0,
            "137": 0,
            "138": 0,
            "139": 0
          },
          "Branches": [
            {
              "Line": 119,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 122,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 122,
              "Offset": 45,
              "EndOffset": 70,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 119,
              "Offset": 12,
              "EndOffset": 87,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.List`1<System.String> syncomp.Transformer::EnsureAndSupport(syncomp.Context,System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "142": 0,
            "143": 0,
            "144": 0,
            "145": 0,
            "146": 0,
            "147": 0,
            "148": 0,
            "149": 0,
            "150": 0,
            "151": 0,
            "152": 0,
            "153": 0,
            "154": 0,
            "155": 0,
            "156": 0,
            "157": 0,
            "158": 0,
            "159": 0,
            "160": 0,
            "161": 0,
            "162": 0,
            "163": 0,
            "164": 0
          },
          "Branches": [
            {
              "Line": 143,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 146,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 146,
              "Offset": 45,
              "EndOffset": 70,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 143,
              "Offset": 12,
              "EndOffset": 87,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.List`1<System.String> syncomp.Transformer::EnsureOrSupport(syncomp.Context,System.Collections.Generic.List`1<System.String>)": {
          "Lines": {
            "167": 0,
            "168": 0,
            "169": 0,
            "170": 0,
            "171": 0,
            "172": 0,
            "173": 0,
            "174": 0,
            "175": 0,
            "176": 0,
            "177": 0,
            "178": 0,
            "179": 0,
            "180": 0,
            "181": 0,
            "182": 0,
            "183": 0,
            "184": 0,
            "185": 0,
            "186": 0,
            "187": 0,
            "188": 0,
            "189": 0
          },
          "Branches": [
            {
              "Line": 168,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 171,
              "Offset": 45,
              "EndOffset": 47,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 171,
              "Offset": 45,
              "EndOffset": 70,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 168,
              "Offset": 12,
              "EndOffset": 87,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void syncomp.Transformer::.ctor(System.Collections.Generic.List`1<syncomp.AstNode>,syncomp.Context)": {
          "Lines": {
            "21": 104,
            "22": 104,
            "23": 104,
            "24": 104,
            "25": 104
          },
          "Branches": [
            {
              "Line": 24,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 24,
              "Offset": 18,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 104
            }
          ]
        },
        "System.Void syncomp.Transformer::.cctor()": {
          "Lines": {
            "9": 1,
            "10": 1,
            "11": 70,
            "12": 2,
            "13": 119,
            "14": 118,
            "15": 31,
            "16": 1
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/TransformerHelpers.cs": {
      "syncomp.TransformerHelpers": {
        "System.String syncomp.TransformerHelpers::GetUID()": {
          "Lines": {
            "8": 26,
            "9": 26,
            "10": 26
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/Variable.cs": {
      "syncomp.Variable": {
        "System.String syncomp.Variable::get_Name()": {
          "Lines": {
            "5": 48
          },
          "Branches": []
        },
        "System.String syncomp.Variable::get_MemoryAddress()": {
          "Lines": {
            "6": 48
          },
          "Branches": []
        }
      }
    },
    "/home/jpfeiffer/Source/Synacor/cs/syncomp/src/Transformer/VariableStack.cs": {
      "syncomp.VariableStack": {
        "System.Void syncomp.VariableStack::Push()": {
          "Lines": {
            "14": 63,
            "15": 63,
            "16": 63
          },
          "Branches": []
        },
        "System.Void syncomp.VariableStack::Pop()": {
          "Lines": {
            "18": 3
          },
          "Branches": []
        },
        "System.Void syncomp.VariableStack::Add(syncomp.Variable)": {
          "Lines": {
            "20": 19,
            "21": 19,
            "22": 19
          },
          "Branches": []
        },
        "syncomp.Variable syncomp.VariableStack::Get(System.String)": {
          "Lines": {
            "24": 30,
            "25": 151,
            "26": 59,
            "27": 59,
            "28": 29,
            "30": 1,
            "31": 1,
            "32": 30
          },
          "Branches": [
            {
              "Line": 25,
              "Offset": 102,
              "EndOffset": 29,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 30
            },
            {
              "Line": 26,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 30
            },
            {
              "Line": 26,
              "Offset": 46,
              "EndOffset": 72,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 30
            },
            {
              "Line": 27,
              "Offset": 86,
              "EndOffset": 88,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 29
            },
            {
              "Line": 27,
              "Offset": 86,
              "EndOffset": 94,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 25,
              "Offset": 102,
              "EndOffset": 104,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1
            }
          ]
        },
        "System.Void syncomp.VariableStack::.ctor()": {
          "Lines": {
            "8": 60,
            "10": 120,
            "11": 60,
            "12": 60
          },
          "Branches": []
        }
      }
    }
  }
}