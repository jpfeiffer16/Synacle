#include "./stdlib.bc"
#include "./bool.bc"

// function str_is_eq(var str_actual) {
//   var curry = function(var str_expected) {
//     if (!str_equal(str_expected, str_actual)) {
//       println("Not Equal");
//       // throw("stuff");
//     }
//     println("Getting here");
//   }
//   return curry;
// }

// function assert(void expected, func<void, void> cb) {
//   println("assert");
//   print_number(cb as int);
//   cb(expected);
// }

type assert_type
{
    void left,
    func<void, bool> equal_to,
    func<void, bool> greater_than,
    func<void, bool> less_than
}

function equal_to(void a, void b) : int
{
    print_number(a as int);
    print_number(b as int);
    return a == b;
}

function assert_type_factory(void left) : ptr<assert_type>
{
    ptr<assert_type> &a_type;
    a_type->left = left;
    a_type->equal_to = equal_to;
    return a_type;
}

function is(void left) : ptr<assert_type>
{
    return assert_type_factory(left);
}

// TODO: Test
var a = 1;
var b = 1;
is(a)->equal_to(b);
