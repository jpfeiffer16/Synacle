//BrainF*ck compiler/interpreter written in bc
#include "../lib/stdlib.bc"
#include "symbols.bc"

function jump_back(string code, int index) : int
{
    var nesting_level = 1;
    while (nesting_level > 0)
    {
        --index;
        var char = *(code + index);
        if (char == symbol_right_bracket)
        {
            ++nesting_level
        }
        if (char == symbol_left_bracket)
        {
            --nesting_level;
        }
    }
    return index;
}

function interpret(string code)
{
    var stack_pointer = 4000;
    var code_len = str_len(code);
    // var last_seen_left_bracket = 0;
    for (var i = 0; i < code_len; ++i)
    {
        var char = *(code + i);
        if (char == symbol_plus)
        {
            int cur_val = *stack_pointer;
            ++cur_val;
            wmem(stack_pointer as ptr, cur_val);
        }
        if (char == symbol_minus)
        {
            var cur_val = *stack_pointer;
            --cur_val;
            wmem(stack_pointer as ptr, cur_val);
        }
        if (char == symbol_greater_than)
        {
            ++stack_pointer;
        }
        if (char == symbol_less_than)
        {
            --stack_pointer;
        }
        if (char == symbol_input)
        {
            wmem(stack_pointer as ptr, in());
        }
        if (char == symbol_output)
        {
            out(*stack_pointer as int);
        }
        if (char == symbol_left_bracket)
        {
            // last_seen_left_bracket = i;
        }
        if (char == symbol_right_bracket)
        {
            if (*stack_pointer)
            {
                i = jump_back(code, i);
            }
        }
    }
    // print_number(*stack_pointer as int);
    // println(" ");
}

function compile(string code)
{
    var code_len = str_len(code);
    for (var i = 0; i < code_len; ++i) {
      var char = *(code + i);

      if (char == symbol_plus) {
        println("rmem reg0 16383");
        println("rmem reg1 reg0");
        println("add reg1 1");
        println("wmem reg0 reg1");
      }

      if (char == symbol_minus) {
        println("rmem reg0 16383");
        println("rmem reg1 reg0");
        println("add reg1 32767");
        println("wmem reg0 reg1");
      }

      if (char == symbol_left_bracket) {
        println("left bracket");
      }

      if (char == symbol_right_bracket) {
        println("right bracket");
      }

      if (char == symbol_less_than) {
        println("rmem reg0 16383");
        println("add reg0 32767");
        println("wmem 16383 reg0");
      }

      if (char == symbol_greater_than) {
        println("rmem reg0 16383");
        println("add reg0 1");
        println("wmem 16383 reg0");    
      }

      if (char == symbol_input) {
        println("rmem reg0 16383");
        println("in reg1");
        println("wmem reg0 reg1");
      }

      if (char == symbol_output) {
        println("rmem reg0 16383");
        println("rmem reg1 reg0");
        println("out reg1");
      }
    }
}

println("Minimal brainf*ck environment.");
println("Type code and hit enter to run");
print("$");
var code = input();
interpret(code);

