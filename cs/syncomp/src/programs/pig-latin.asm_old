jmp >str_equal_end
:str_equal
jmp >var_var_end
:var_var
:var_var_end
jmp >var_var_end
:var_var
:var_var_end
wmem >var_var reg0
wmem >var_var reg1
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
call >str_len
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
call >str_len
wmem >var_var reg0
rmem reg0 >var_var
rmem reg1 >var_var
eq reg0 reg0 reg1
call >not
jf reg0 >end_18028fb93cb2
set reg0 0
ret
:end_18028fb93cb2
jmp >var_var_end
:var_var
:var_var_end
set reg0 0
wmem >var_var reg0
:for_24f41ac0fb8e_begin
rmem reg0 >var_var
rmem reg1 >var_var
eq reg2 reg0 reg1
gt reg3 reg0 reg1
or reg0 reg2 reg3
call >not
rmem reg0 >var_var
jf reg0 >for_24f41ac0fb8e_end
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
rmem reg1 >var_var
add reg0 reg0 reg1
rmem reg0 reg0
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
rmem reg1 >var_var
add reg0 reg0 reg1
rmem reg0 reg0
wmem >var_var reg0
rmem reg0 >var_var
rmem reg1 >var_var
eq reg0 reg0 reg1
call >not
jf reg0 >end_e87caccb0e54
set reg0 0
ret
:end_e87caccb0e54
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
jmp >for_24f41ac0fb8e_begin
:for_24f41ac0fb8e_end
set reg0 1
ret
ret
:str_equal_end
set reg0 >str_equal
jmp >alloc_end
:alloc
jmp >var_var_end
:var_var
:var_var_end
set reg0 16382
wmem >var_var reg0
:while_c5bf8fc3c927_begin
rmem reg0 >var_var
rmem reg0 reg0
call >not
jf reg0 >while_c5bf8fc3c927_end
rmem reg0 >var_var
set reg1 1
call >subtract
wmem >var_var reg0
jmp >while_c5bf8fc3c927_begin
:while_c5bf8fc3c927_end
rmem reg0 >var_var
set reg1 2
add reg0 reg0 reg1
wmem >var_var reg0
rmem reg0 >var_var
ret
ret
:alloc_end
set reg0 >alloc
jmp >alloc_chunk_end
:alloc_chunk
jmp >var_var_end
:var_var
:var_var_end
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
call >alloc
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
rmem reg1 >var_var
add reg0 reg0 reg1
wmem >var_var reg0
rmem reg0 >var_var
set reg1 32767
wmem reg0 reg1
rmem reg0 >var_var
ret
ret
:alloc_chunk_end
set reg0 >alloc_chunk
jmp >mem_cp_end
:mem_cp
jmp >var_var_end
:var_var
:var_var_end
jmp >var_var_end
:var_var
:var_var_end
jmp >var_var_end
:var_var
:var_var_end
wmem >var_var reg0
wmem >var_var reg1
wmem >var_var reg2
jmp >var_var_end
:var_var
:var_var_end
set reg0 0
wmem >var_var reg0
:while_3447b9429236_begin
rmem reg0 >var_var
rmem reg1 >var_var
gt reg0 reg0 reg1
call >not
rmem reg0 >var_var
jf reg0 >while_3447b9429236_end
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
rmem reg1 >var_var
add reg0 reg0 reg1
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
rmem reg1 >var_var
add reg0 reg0 reg1
wmem >var_var reg0
rmem reg0 >var_var
rmem reg1 >var_var
rmem reg1 reg1
wmem reg0 reg1
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
jmp >while_3447b9429236_begin
:while_3447b9429236_end
ret
:mem_cp_end
set reg0 >mem_cp
jmp >str_len_end
:str_len
jmp >var_var_end
:var_var
:var_var_end
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
set reg0 0
wmem >var_var reg0
:while_13addd627989_begin
rmem reg0 >var_var
rmem reg0 reg0
jf reg0 >while_13addd627989_end
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
jmp >while_13addd627989_begin
:while_13addd627989_end
rmem reg0 >var_var
ret
ret
:str_len_end
set reg0 >str_len
jmp >str_cat_end
:str_cat
jmp >var_var_end
:var_var
:var_var_end
jmp >var_var_end
:var_var
:var_var_end
wmem >var_var reg0
wmem >var_var reg1
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
call >str_len
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
call >str_len
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
call >alloc
wmem >var_var reg0
rmem reg0 >var_var
rmem reg1 >var_var
rmem reg2 >var_var
call >mem_cp
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
rmem reg1 >var_var
add reg0 reg0 reg1
wmem >var_var reg0
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
rmem reg0 >var_var
rmem reg1 >var_var
rmem reg2 >var_var
call >mem_cp
rmem reg0 >var_var
ret
ret
:str_cat_end
set reg0 >str_cat
jmp >flip_str_end
:flip_str
jmp >var_var_end
:var_var
:var_var_end
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
call >alloc
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
call >str_len
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
set reg0 0
wmem >var_var reg0
:while_b6c334316b69_begin
rmem reg0 >var_var
rmem reg1 >var_var
eq reg2 reg0 reg1
gt reg3 reg0 reg1
or reg0 reg2 reg3
call >not
rmem reg0 >var_var
jf reg0 >while_b6c334316b69_end
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
rmem reg1 >var_var
add reg0 reg0 reg1
wmem >var_var reg0
rmem reg0 >var_var
rmem reg0 reg0
rmem reg0 >var_var
rmem reg0 reg0
push reg0
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
jmp >while_b6c334316b69_begin
:while_b6c334316b69_end
jmp >var_var_end
:var_var
:var_var_end
pop reg0
wmem >var_var reg0
set reg0 0
wmem >var_var reg0
:while_7299c528ab05_begin
rmem reg0 >var_var
rmem reg1 >var_var
eq reg2 reg0 reg1
gt reg3 reg0 reg1
or reg0 reg2 reg3
call >not
rmem reg0 >var_var
jf reg0 >while_7299c528ab05_end
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
rmem reg1 >var_var
add reg0 reg0 reg1
wmem >var_var reg0
rmem reg0 >var_var
rmem reg1 >var_var
wmem reg0 reg1
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
pop reg0
wmem >var_var reg0
jmp >while_7299c528ab05_begin
:while_7299c528ab05_end
rmem reg0 >var_var
rmem reg0 >var_var
push reg0
rmem reg0 >var_var
ret
ret
:flip_str_end
set reg0 >flip_str
jmp >input_end
:input
jmp >var_var_end
:var_var
:var_var_end
set reg0 16384
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
in reg0
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
set reg1 10
eq reg0 reg0 reg1
wmem >var_var reg0
:while_fd6277338296_begin
rmem reg0 >var_var
rmem reg1 >var_var
call >and
call >not
jf reg0 >while_fd6277338296_end
rmem reg0 >var_var
rmem reg1 >var_var
wmem reg0 reg1
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
in reg0
wmem >var_var reg0
rmem reg0 >var_var
set reg1 10
eq reg0 reg0 reg1
wmem >var_var reg0
jmp >while_fd6277338296_begin
:while_fd6277338296_end
rmem reg0 >var_var
set reg1 0
wmem reg0 reg1
jmp >var_var_end
:var_var
:var_var_end
call >alloc
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
set reg0 16384
call >str_len
wmem >var_var reg0
set reg0 16384
rmem reg1 >var_var
rmem reg2 >var_var
call >mem_cp
rmem reg0 >var_var
ret
ret
:input_end
set reg0 >input
jmp >print_end
:print
jmp >var_var_end
:var_var
:var_var_end
wmem >var_var reg0
:while_3aff0f34020b_begin
rmem reg0 >var_var
rmem reg0 reg0
jf reg0 >while_3aff0f34020b_end
rmem reg0 >var_var
rmem reg0 reg0
out reg0
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
jmp >while_3aff0f34020b_begin
:while_3aff0f34020b_end
ret
:print_end
set reg0 >print
jmp >println_end
:println
jmp >var_var_end
:var_var
:var_var_end
wmem >var_var reg0
rmem reg0 >var_var
call >print
set reg0 10
out reg0
ret
:println_end
set reg0 >println
jmp >print_number_end
:print_number
jmp >var_var_end
:var_var
:var_var_end
wmem >var_var reg0
rmem reg0 >var_var
set reg1 10
eq reg0 reg0 reg1
jf reg0 >end_320156cd83a5
set reg0 49
out reg0
set reg0 48
out reg0
ret
:end_320156cd83a5
jmp >var_var_end
:var_var
:var_var_end
jmp >var_var_end
:var_var
:var_var_end
set reg0 0
wmem >var_var reg0
:while_28781e5c5089_begin
rmem reg0 >var_var
set reg1 10
gt reg0 reg0 reg1
set reg0 10
jf reg0 >while_28781e5c5089_end
rmem reg0 >var_var
set reg1 10
mod reg0 reg0 reg1
wmem >var_var reg0
rmem reg0 >var_var
rmem reg0 >var_var
push reg0
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
rmem reg0 >var_var
set reg1 10
call >divide
wmem >var_var reg0
jmp >while_28781e5c5089_begin
:while_28781e5c5089_end
rmem reg0 >var_var
set reg1 10
mod reg0 reg0 reg1
wmem >var_var reg0
rmem reg0 >var_var
rmem reg0 >var_var
push reg0
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
set reg0 0
wmem >var_var reg0
:while_5db4b7455403_begin
rmem reg0 >var_var
rmem reg1 >var_var
eq reg2 reg0 reg1
gt reg3 reg0 reg1
or reg0 reg2 reg3
call >not
rmem reg0 >var_var
jf reg0 >while_5db4b7455403_end
rmem reg0 >var_var
set reg1 1
add reg0 reg0 reg1
wmem >var_var reg0
pop reg0
set reg1 48
add reg0 reg0 reg1
out reg0
jmp >while_5db4b7455403_begin
:while_5db4b7455403_end
ret
:print_number_end
set reg0 >print_number
jmp >dump_mem_end
:dump_mem
jmp >var_var_end
:var_var
:var_var_end
set reg0 0
wmem >var_var reg0
:while_80cd1bdbcf80_begin
rmem reg0 >var_var
rmem reg0 reg0
jf reg0 >while_80cd1bdbcf80_end
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
rmem reg0 >var_var
rmem reg0 reg0
call >print_number
set reg0 10
out reg0
jmp >while_80cd1bdbcf80_begin
:while_80cd1bdbcf80_end
ret
:dump_mem_end
set reg0 >dump_mem
jmp >int_end
:int
jmp >var_var_end
:var_var
:var_var_end
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
call >flip_str
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
call >str_len
wmem >var_var reg0
rmem reg0 >var_var
set reg1 1
call >subtract
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
set reg0 0
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
set reg0 0
wmem >var_var reg0
:while_586bde2f526d_begin
rmem reg0 >var_var
rmem reg1 >var_var
gt reg0 reg0 reg1
call >not
rmem reg0 >var_var
jf reg0 >while_586bde2f526d_end
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
rmem reg1 >var_var
add reg0 reg0 reg1
wmem >var_var reg0
rmem reg0 >var_var
rmem reg0 reg0
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
set reg1 47
gt reg0 reg0 reg1
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
set reg1 58
eq reg2 reg0 reg1
gt reg3 reg0 reg1
or reg0 reg2 reg3
call >not
wmem >var_var reg0
rmem reg0 >var_var
rmem reg1 >var_var
call >and
jf reg0 >end_bde3dafe46c6
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
set reg1 48
call >subtract
wmem >var_var reg0
rmem reg0 >var_var
call >print_number
set reg0 10
out reg0
jmp >var_var_end
:var_var
:var_var_end
set reg0 0
wmem >var_var reg0
jmp >var_var_end
:var_var
:var_var_end
rmem reg0 >var_var
set reg1 1
call >subtract
wmem >var_var reg0
:while_6d3ef74861cf_begin
rmem reg0 >var_var
rmem reg1 >var_var
eq reg2 reg0 reg1
gt reg3 reg0 reg1
or reg0 reg2 reg3
call >not
rmem reg0 >var_var
jf reg0 >while_6d3ef74861cf_end
rmem reg0 >var_var
set reg1 10
call >subtract
wmem >var_var reg0
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
jmp >while_6d3ef74861cf_begin
:while_6d3ef74861cf_end
rmem reg0 >var_var
rmem reg1 >var_var
add reg0 reg0 reg1
wmem >var_var reg0
:end_bde3dafe46c6
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
jmp >while_586bde2f526d_begin
:while_586bde2f526d_end
rmem reg0 >var_var
call >print_number
rmem reg0 >var_var
ret
ret
:int_end
set reg0 >int
jmp >main_end
:main
jmp >var_var_end
:var_var
&n
&t
&e
&r
32
&y
&o
&u
&r
32
&n
&a
&m
&e
32
&o
&r
32
&'
&e
&x
&i
&t
&'
32
&t
&o
32
&s
&t
&o
&p
&:
32
0
:var_var_end
wmem >var_var &E
set reg0 >var_var
call >print
jmp >var_var_end
:var_var
:var_var_end
call >input
wmem >var_var reg0
rmem reg0 >var_var
jmp >var_var_end
:var_var
&x
&i
&t
0
:var_var_end
wmem >var_var &e
set reg1 >var_var
call >str_equal
jf reg0 >end_8d610d87bbe7
ret
:end_8d610d87bbe7
jmp >var_var_end
:var_var
:var_var_end
call >alloc
wmem >var_var reg0
rmem reg0 >var_var
rmem reg1 >var_var
rmem reg1 reg1
wmem reg0 reg1
rmem reg0 >var_var
add reg0 reg0 1
wmem >var_var reg0
rmem reg0 >var_var
rmem reg1 >var_var
call >str_cat
jmp >var_var_end
:var_var
&y
0
:var_var_end
wmem >var_var &a
set reg1 >var_var
call >str_cat
call >println
call >main
ret
:main_end
set reg0 >main
call >main
halt

:subtract
add reg0 reg0 32767
add reg1 reg1 32767
jt reg1 >subtract
ret


:not
jf reg0 >not_isfalse
:not_istrue
set reg0 0
ret
:not_isfalse
set reg0 1
ret


:divide
set reg3 0
set reg2 reg1
:divide_loop
set reg1 reg2
gt reg4 reg0 reg1
eq reg5 reg0 reg1
or reg4 reg4 reg5
jf reg4 >divide_loop_end
call >subtract
add reg3 reg3 1
call >divide_loop
:divide_loop_end
set reg0 reg3
ret


:and
jf reg0 >and_isfalse
jf reg1 >and_isfalse
:and_istrue
set reg0 1
ret
:and_isfalse
set reg0 0
ret


:or
jt reg0 >or_istrue
jt reg1 >or_istrue
:or_isfalse
set reg0 0
ret
:or_istrue
set reg0 1
ret

